{
  "components": {
    "comp-custom-training-job": {
      "executorLabel": "exec-custom-training-job",
      "inputDefinitions": {
        "parameters": {
          "base_output_directory": {
            "defaultValue": "",
            "description": "The Cloud Storage location to store the output of this CustomJob or HyperparameterTuningJob. See [more information ](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/GcsDestination).",
            "isOptional": true,
            "parameterType": "STRING"
          },
          "display_name": {
            "description": "The name of the CustomJob.",
            "parameterType": "STRING"
          },
          "enable_web_access": {
            "defaultValue": false,
            "description": "Whether you want Vertex AI to enable [interactive shell access ](https://cloud.google.com/vertex-ai/docs/training/monitor-debug-interactive-shell) to training containers. If `True`, you can access interactive shells at the URIs given by [CustomJob.web_access_uris][].",
            "isOptional": true,
            "parameterType": "BOOLEAN"
          },
          "encryption_spec_key_name": {
            "defaultValue": "",
            "description": "Customer-managed encryption key options for the CustomJob. If this is set, then all resources created by the CustomJob will be encrypted with the provided encryption key.",
            "isOptional": true,
            "parameterType": "STRING"
          },
          "labels": {
            "defaultValue": {},
            "description": "The labels with user-defined metadata to organize the CustomJob. See [more information](https://goo.gl/xmQnxf).",
            "isOptional": true,
            "parameterType": "STRUCT"
          },
          "location": {
            "defaultValue": "us-central1",
            "description": "Location for creating the custom training job. If not set, default to us-central1.",
            "isOptional": true,
            "parameterType": "STRING"
          },
          "network": {
            "defaultValue": "",
            "description": "The full name of the Compute Engine network to which the job should be peered. For example, `projects/12345/global/networks/myVPC`. Format is of the form `projects/{project}/global/networks/{network}`. Where `{project}` is a project number, as in `12345`, and `{network}` is a network name. Private services access must already be configured for the network. If left unspecified, the job is not peered with any network.",
            "isOptional": true,
            "parameterType": "STRING"
          },
          "project": {
            "defaultValue": "{{$.pipeline_google_cloud_project_id}}",
            "description": "Project to create the custom training job in. Defaults to the project in which the PipelineJob is run.",
            "isOptional": true,
            "parameterType": "STRING"
          },
          "reserved_ip_ranges": {
            "defaultValue": [],
            "description": "A list of names for the reserved IP ranges under the VPC network that can be used for this job. If set, we will deploy the job within the provided IP ranges. Otherwise, the job will be deployed to any IP ranges under the provided VPC network.",
            "isOptional": true,
            "parameterType": "LIST"
          },
          "restart_job_on_worker_restart": {
            "defaultValue": false,
            "description": "Restarts the entire CustomJob if a worker gets restarted. This feature can be used by distributed training jobs that are not resilient to workers leaving and joining a job.",
            "isOptional": true,
            "parameterType": "BOOLEAN"
          },
          "service_account": {
            "defaultValue": "",
            "description": "Sets the default service account for workload run-as account. The [service account ](https://cloud.google.com/vertex-ai/docs/pipelines/configure-project#service-account) running the pipeline submitting jobs must have act-as permission on this run-as account. If unspecified, the Vertex AI Custom Code [Service Agent ](https://cloud.google.com/vertex-ai/docs/general/access-control#service-agents) for the CustomJob's project.",
            "isOptional": true,
            "parameterType": "STRING"
          },
          "tensorboard": {
            "defaultValue": "",
            "description": "The name of a Vertex AI TensorBoard resource to which this CustomJob will upload TensorBoard logs.",
            "isOptional": true,
            "parameterType": "STRING"
          },
          "timeout": {
            "defaultValue": "604800s",
            "description": "The maximum job running time. The default is 7 days. A duration in seconds with up to nine fractional digits, terminated by 's', for example: \"3.5s\".",
            "isOptional": true,
            "parameterType": "STRING"
          },
          "worker_pool_specs": {
            "defaultValue": [],
            "description": "Serialized json spec of the worker pools including machine type and Docker image. All worker pools except the first one are optional and can be skipped by providing an empty value. See [more information](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/CustomJobSpec#WorkerPoolSpec).",
            "isOptional": true,
            "parameterType": "LIST"
          }
        }
      },
      "outputDefinitions": {
        "parameters": {
          "gcp_resources": {
            "description": "Serialized JSON of `gcp_resources` [proto](https://github.com/kubeflow/pipelines/tree/master/components/google-cloud/google_cloud_pipeline_components/proto) which tracks the CustomJob.",
            "parameterType": "STRING"
          }
        }
      }
    },
    "comp-importer": {
      "executorLabel": "exec-importer",
      "inputDefinitions": {
        "parameters": {
          "uri": {
            "parameterType": "STRING"
          }
        }
      },
      "outputDefinitions": {
        "artifacts": {
          "artifact": {
            "artifactType": {
              "schemaTitle": "google.UnmanagedContainerModel",
              "schemaVersion": "0.0.1"
            }
          }
        }
      }
    },
    "comp-model-upload": {
      "executorLabel": "exec-model-upload",
      "inputDefinitions": {
        "artifacts": {
          "parent_model": {
            "artifactType": {
              "schemaTitle": "google.VertexModel",
              "schemaVersion": "0.0.1"
            },
            "description": "An artifact of a model which to upload a new version to. Only specify this field when uploading a new version. [More information.](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.models/upload#request-body)",
            "isOptional": true
          },
          "unmanaged_container_model": {
            "artifactType": {
              "schemaTitle": "google.UnmanagedContainerModel",
              "schemaVersion": "0.0.1"
            },
            "description": "The unmanaged container model to be uploaded.  The Model can be passed from an upstream step or imported via a KFP `dsl.importer`. Example:\nfrom kfp import dsl\nfrom google_cloud_pipeline_components.types import artifact_types\n\nimporter_spec = dsl.importer( artifact_uri='gs://managed-pipeline-gcpc-e2e-test/automl-tabular/model', artifact_class=artifact_types.UnmanagedContainerModel, metadata={ 'containerSpec': { 'imageUri': 'us-docker.pkg.dev/vertex-ai/automl-tabular/prediction-server:prod' } })",
            "isOptional": true
          }
        },
        "parameters": {
          "description": {
            "defaultValue": "",
            "description": "The description of the Model. [More information.](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.models#Model)",
            "isOptional": true,
            "parameterType": "STRING"
          },
          "display_name": {
            "description": "The display name of the Model. The name can be up to 128 characters long and can be consist of any UTF-8 characters. [More information.](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.models#Model)",
            "parameterType": "STRING"
          },
          "encryption_spec_key_name": {
            "defaultValue": "",
            "description": "Customer-managed encryption key spec for a Model. If set, this Model and all sub-resources of this Model will be secured by this key.  Has the form: `projects/my-project/locations/my-location/keyRings/my-kr/cryptoKeys/my-key`. The key needs to be in the same region as where the compute resource is created.",
            "isOptional": true,
            "parameterType": "STRING"
          },
          "explanation_metadata": {
            "defaultValue": {},
            "description": "Metadata describing the Model's input and output for explanation. Both `explanation_metadata` and `explanation_parameters` must be passed together when used. [More information.](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/ExplanationSpec#explanationmetadata)",
            "isOptional": true,
            "parameterType": "STRUCT"
          },
          "explanation_parameters": {
            "defaultValue": {},
            "description": "Parameters to configure explaining for Model's predictions.  [More information.](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/ExplanationSpec#ExplanationParameters)",
            "isOptional": true,
            "parameterType": "STRUCT"
          },
          "labels": {
            "defaultValue": {},
            "description": "The labels with user-defined metadata to organize your model.  Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed.  See https://goo.gl/xmQnxf for more information and examples of labels.",
            "isOptional": true,
            "parameterType": "STRUCT"
          },
          "location": {
            "defaultValue": "us-central1",
            "description": "Optional location to upload this Model to. If not set, defaults to `us-central1`.",
            "isOptional": true,
            "parameterType": "STRING"
          },
          "project": {
            "defaultValue": "{{$.pipeline_google_cloud_project_id}}",
            "description": "Project to upload this Model to. Defaults to the project in which the PipelineJob is run.",
            "isOptional": true,
            "parameterType": "STRING"
          },
          "version_aliases": {
            "defaultValue": [],
            "description": "User provided version aliases so that a model version can be referenced via alias (i.e. `projects/{project}/locations/{location}/models/{modelId}@{version_alias}` instead of auto-generated version id (i.e. `projects/{project}/locations/{location}/models/{modelId}@{versionId}`). The format is [a-z][a-zA-Z0-9-]{0,126}[a-z0-9] to distinguish from versionId. A default version alias will be created for the first version of the model, and there must be exactly one default version alias for a model.",
            "isOptional": true,
            "parameterType": "LIST"
          }
        }
      },
      "outputDefinitions": {
        "artifacts": {
          "model": {
            "artifactType": {
              "schemaTitle": "google.VertexModel",
              "schemaVersion": "0.0.1"
            },
            "description": "Artifact tracking the created Model version."
          }
        },
        "parameters": {
          "gcp_resources": {
            "description": "Serialized JSON of `gcp_resources` [proto](https://github.com/kubeflow/pipelines/tree/master/components/google-cloud/google_cloud_pipeline_components/proto) which tracks the upload Model's long-running operation.",
            "parameterType": "STRING"
          }
        }
      }
    }
  },
  "deploymentSpec": {
    "executors": {
      "exec-custom-training-job": {
        "container": {
          "args": [
            "--type",
            "CustomJob",
            "--payload",
            "{\"display_name\": \"{{$.inputs.parameters['display_name']}}\", \"job_spec\": {\"worker_pool_specs\": {{$.inputs.parameters['worker_pool_specs']}}, \"scheduling\": {\"timeout\": \"{{$.inputs.parameters['timeout']}}\", \"restart_job_on_worker_restart\": {{$.inputs.parameters['restart_job_on_worker_restart']}}}, \"service_account\": \"{{$.inputs.parameters['service_account']}}\", \"tensorboard\": \"{{$.inputs.parameters['tensorboard']}}\", \"enable_web_access\": {{$.inputs.parameters['enable_web_access']}}, \"network\": \"{{$.inputs.parameters['network']}}\", \"reserved_ip_ranges\": {{$.inputs.parameters['reserved_ip_ranges']}}, \"base_output_directory\": {\"output_uri_prefix\": \"{{$.inputs.parameters['base_output_directory']}}\"}}, \"labels\": {{$.inputs.parameters['labels']}}, \"encryption_spec\": {\"kms_key_name\": \"{{$.inputs.parameters['encryption_spec_key_name']}}\"}}",
            "--project",
            "{{$.inputs.parameters['project']}}",
            "--location",
            "{{$.inputs.parameters['location']}}",
            "--gcp_resources",
            "{{$.outputs.parameters['gcp_resources'].output_file}}"
          ],
          "command": [
            "python3",
            "-u",
            "-m",
            "google_cloud_pipeline_components.container.v1.custom_job.launcher"
          ],
          "image": "gcr.io/ml-pipeline/google-cloud-pipeline-components:2.13.1"
        }
      },
      "exec-importer": {
        "importer": {
          "artifactUri": {
            "constant": "gs://donuts-dev-usc1/temporal/keras_yolov8/train_yolov8_20240424_104154"
          },
          "metadata": {
            "containerSpec": {
              "imageUri": "us-docker.pkg.dev/vertex-ai-restricted/prediction/tf_opt-gpu.2-12:latest"
            }
          },
          "typeSchema": {
            "schemaTitle": "google.UnmanagedContainerModel",
            "schemaVersion": "0.0.1"
          }
        }
      },
      "exec-model-upload": {
        "container": {
          "args": [
            "--type",
            "UploadModel",
            "--payload",
            "{\"Concat\": [\"{\", \"\\\"display_name\\\": \\\"\", \"{{$.inputs.parameters['display_name']}}\", \"\\\"\", \", \\\"description\\\": \\\"\", \"{{$.inputs.parameters['description']}}\", \"\\\"\", \", \\\"explanation_spec\\\": {\", \"\\\"parameters\\\": \", \"{{$.inputs.parameters['explanation_parameters']}}\", \", \\\"metadata\\\": \", \"{{$.inputs.parameters['explanation_metadata']}}\", \"}\", \", \\\"encryption_spec\\\": {\\\"kms_key_name\\\":\\\"\", \"{{$.inputs.parameters['encryption_spec_key_name']}}\", \"\\\"}\", \", \\\"version_aliases\\\": \", \"{{$.inputs.parameters['version_aliases']}}\", \", \\\"labels\\\": \", \"{{$.inputs.parameters['labels']}}\", \", \\\"pipeline_job\\\": \\\"\", \"projects/{{$.inputs.parameters['project']}}/locations/{{$.inputs.parameters['location']}}/pipelineJobs/{{$.pipeline_job_uuid}}\", \"\\\"\", \"}\"]}",
            "--project",
            "{{$.inputs.parameters['project']}}",
            "--location",
            "{{$.inputs.parameters['location']}}",
            "--gcp_resources",
            "{{$.outputs.parameters['gcp_resources'].output_file}}",
            "--executor_input",
            "{{$}}",
            "{\"IfPresent\": {\"InputName\": \"parent_model\", \"Then\": [\"--parent_model_name\", \"{{$.inputs.artifacts['parent_model'].metadata['resourceName']}}\"]}}"
          ],
          "command": [
            "python3",
            "-u",
            "-m",
            "google_cloud_pipeline_components.container.v1.model.upload_model.launcher"
          ],
          "image": "gcr.io/ml-pipeline/google-cloud-pipeline-components:2.13.1"
        }
      }
    }
  },
  "pipelineInfo": {
    "name": "yolov8-finetuning"
  },
  "root": {
    "dag": {
      "tasks": {
        "custom-training-job": {
          "cachingOptions": {
            "enableCache": true
          },
          "componentRef": {
            "name": "comp-custom-training-job"
          },
          "inputs": {
            "parameters": {
              "display_name": {
                "runtimeValue": {
                  "constant": "train_yolov8_20240424_104154"
                }
              },
              "project": {
                "componentInputParameter": "project"
              },
              "worker_pool_specs": {
                "runtimeValue": {
                  "constant": [
                    {
                      "container_spec": {
                        "args": [
                          "--input_csv_path={{channel:task=;name=input_csv_path;type=String;}}",
                          "--output_model_dir=gs://donuts-dev-usc1/temporal/keras_yolov8/train_yolov8_20240424_104154",
                          "--epochs={{channel:task=;name=epochs;type=Integer;}}",
                          "--pretrained_backbone={{channel:task=;name=backbone;type=String;}}",
                          "--fpn_depth={{channel:task=;name=fpn_depth;type=Integer;}}",
                          "--learning_rate={{channel:task=;name=learning_rate;type=Float;}}",
                          "--confidence_threshold={{channel:task=;name=confidence_threshold;type=Float;}}",
                          "--iou_threshold={{channel:task=;name=iou_threshold;type=Float;}}"
                        ],
                        "command": [],
                        "env": [
                          {
                            "name": "RESOLUTION",
                            "value": "512"
                          }
                        ],
                        "image_uri": "us-docker.pkg.dev/vertex-ai/vertex-vision-model-garden-dockers/keras-yolov8-train"
                      },
                      "disk_spec": {
                        "boot_disk_size_gb": 500.0,
                        "boot_disk_type": "pd-ssd"
                      },
                      "machine_spec": {
                        "accelerator_count": 2.0,
                        "accelerator_type": "NVIDIA_TESLA_V100",
                        "machine_type": "n1-highmem-16"
                      },
                      "replica_count": 1.0
                    }
                  ]
                }
              }
            }
          },
          "taskInfo": {
            "name": "custom-training-job"
          }
        },
        "importer": {
          "cachingOptions": {
            "enableCache": true
          },
          "componentRef": {
            "name": "comp-importer"
          },
          "dependentTasks": [
            "custom-training-job"
          ],
          "inputs": {
            "parameters": {
              "uri": {
                "runtimeValue": {
                  "constant": "gs://donuts-dev-usc1/temporal/keras_yolov8/train_yolov8_20240424_104154"
                }
              }
            }
          },
          "taskInfo": {
            "name": "importer"
          }
        },
        "model-upload": {
          "cachingOptions": {
            "enableCache": true
          },
          "componentRef": {
            "name": "comp-model-upload"
          },
          "dependentTasks": [
            "importer"
          ],
          "inputs": {
            "artifacts": {
              "unmanaged_container_model": {
                "taskOutputArtifact": {
                  "outputArtifactKey": "artifact",
                  "producerTask": "importer"
                }
              }
            },
            "parameters": {
              "display_name": {
                "componentInputParameter": "model_display_name"
              },
              "project": {
                "componentInputParameter": "project"
              }
            }
          },
          "taskInfo": {
            "name": "model-upload"
          }
        }
      }
    },
    "inputDefinitions": {
      "parameters": {
        "backbone": {
          "defaultValue": "yolo_v8_xl_backbone_coco",
          "isOptional": true,
          "parameterType": "STRING"
        },
        "confidence_threshold": {
          "defaultValue": 0.02,
          "isOptional": true,
          "parameterType": "NUMBER_DOUBLE"
        },
        "epochs": {
          "defaultValue": 10.0,
          "isOptional": true,
          "parameterType": "NUMBER_INTEGER"
        },
        "fpn_depth": {
          "defaultValue": 3.0,
          "isOptional": true,
          "parameterType": "NUMBER_INTEGER"
        },
        "gpu_count": {
          "defaultValue": 2.0,
          "isOptional": true,
          "parameterType": "NUMBER_INTEGER"
        },
        "input_csv_path": {
          "defaultValue": "gs://cloud-samples-data/vision/salads.csv",
          "isOptional": true,
          "parameterType": "STRING"
        },
        "iou_threshold": {
          "defaultValue": 0.3,
          "isOptional": true,
          "parameterType": "NUMBER_DOUBLE"
        },
        "learning_rate": {
          "defaultValue": 0.0005,
          "isOptional": true,
          "parameterType": "NUMBER_DOUBLE"
        },
        "model_display_name": {
          "defaultValue": "yolov8_fine_tuned",
          "isOptional": true,
          "parameterType": "STRING"
        },
        "project": {
          "defaultValue": "donuts-dev",
          "isOptional": true,
          "parameterType": "STRING"
        }
      }
    }
  },
  "schemaVersion": "2.1.0",
  "sdkVersion": "kfp-2.7.0"
}